import {
  CreateRolePage,
  RolesListPage,
  UpdateRolePage,
} from '@pages/accessRights';
import { AccountingPage } from '@pages/Accounting';
import {
  AdminNewsListPage,
  CreateNewsPage,
  UpdateMeetingPage,
  CreateEventPage,
  AdminEventsListPage,
  UpdateEventPage,
  CreateMeetingPage,
  MeetingsListPage,
  UpdateNewsPage,
  AdminResidentsListPage,
  AdminCurrentResidentPage,
  AdminEmployeesListPage,
  AdminCurrentEmployeePage,
  CreateNotificationPage,
  NotificationsListPage,
  CurrentNotificationPage,
  AdminMainPage,
  AdminVotingListPage,
  CreateVotingPage,
  UpdateVotingPage,
  UpdateVotingQuestionsPage,
  AdminAnnouncements,
  CurrentVotingPage,
  CreateAnnouncementPage,
  AdminAnnouncementsTablePage,
  UpdateAnnouncementPage,
  TechnicalWorksInfo,
  AdminTechnicalWorksListPage,
  CreateTechWorkPage,
  UpdateTechWorkPage,
  CreateLoyaltyPage,
  AdminLoyaltyListPage,
  UpdateLoyalty,
  AdminServicesListPage,
  UpdateService,
  CreateServicePage,
  AdminAdvertisementsListPage,
  CreateAdvertisementPage,
  UpdateAdvertisement,
  CreateEmployeePage,
  UpdateEmployeePage,
} from '@pages/admin';
import { ApplicationsPage } from '@pages/Applications';
import {
  RegistrationConfirmPage,
  LoginPage,
  RegistrationPage,
  ResetPasswordPage,
  SendCodeForMailPage,
  SendCodeForPhonePage,
} from '@pages/Auth';
import {
  CurrentEventPage,
  CurrentMeetingPage,
  CurrentNewsPage,
  EventsListPage,
  MainPage,
  NewsListPage,
  SettingsPage,
  UserCurrentVotingPage,
  UserVotingPage,
  UserMeetingsPage,
  UserServicesListPage,
  UserCurrentServicePage,
  UserCurrentLoyaltyPage,
  UserLoyaltyListPage,
  KBasePage,
  CreateRequestPage,
  CurrentRequestPage,
  RequestMainPage,
  ApplicationsMainPage,
  CreateApplicationPage,
} from '@pages/Clients';
import { TechnicalWorks } from '@pages/Clients';
import {
  CreateElevatorPage,
  CurrentEnergyPage,
  CurrentHeatingPage,
  CurrentLiftPage,
  EnergyListPage,
  HeatingListPage,
  LiftListPage,
  UpdateElevatorPage,
} from '@pages/engineering';
import { ForbiddenPage } from '@pages/Forbidden';
import { NotFoundPage } from '@pages/NotFound';
import { PassportPage } from '@pages/Passport';
import {
  CreateCameraPage,
  SecurityAccessPage,
  SecurityPage,
  SecurityVideoPage,
  CreateAccessPage,
  CreateIntercomPage,
  SecurityIntercomPage,
  CreateSlsIntercomPage,
  SecuritySlsIntercomPage,
  CurrentSlsIntercomPage,
  UpdateSlsIntercomPage,
  CurrentAccessPage,
  UpdateAccessPage,
  CurrentCameraPage,
  CurrentIntercomPage,
  UpdateCameraPage,
  UpdateIntercomPage,
} from '@pages/Security';
import { StatisticPage } from '@pages/Statistic';
import { AppRoutesEnum, AppRoutes, AccessRoles } from '@shared/constants';
import { AppRoutesProps } from '@shared/types';

export const routeConfig: Partial<Record<AppRoutesEnum, AppRoutesProps>> = {
  [AppRoutesEnum.ADMIN]: {
    path: AppRoutes[AppRoutesEnum.ADMIN](),
    element: <AdminMainPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN],
  },
  [AppRoutesEnum.ADMIN_INFO_TECHNICAL_WORKS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_INFO_TECHNICAL_WORKS](),
    element: <TechnicalWorksInfo />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_INFO_TECHNICAL_WORKS],
  },
  [AppRoutesEnum.ADMIN_INFO_ANNOUNCEMENTS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_INFO_ANNOUNCEMENTS](),
    element: <AdminAnnouncements />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_INFO_ANNOUNCEMENTS],
  },
  [AppRoutesEnum.ADMIN_NEWS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_NEWS](),
    element: <AdminNewsListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_NEWS],
  },
  [AppRoutesEnum.UPDATE_NEWS]: {
    path: AppRoutes[AppRoutesEnum.UPDATE_NEWS](':id'),
    element: <UpdateNewsPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.UPDATE_NEWS],
  },
  [AppRoutesEnum.CREATE_NEWS]: {
    path: AppRoutes[AppRoutesEnum.CREATE_NEWS](),
    element: <CreateNewsPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.CREATE_NEWS],
  },
  [AppRoutesEnum.ADMIN_EVENTS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_EVENTS](),
    element: <AdminEventsListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_EVENTS],
  },
  [AppRoutesEnum.UPDATE_EVENT]: {
    path: AppRoutes[AppRoutesEnum.UPDATE_EVENT](':id'),
    element: <UpdateEventPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.UPDATE_EVENT],
  },
  [AppRoutesEnum.CREATE_EVENT]: {
    path: AppRoutes[AppRoutesEnum.CREATE_EVENT](),
    element: <CreateEventPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.CREATE_EVENT],
  },
  [AppRoutesEnum.ADMIN_MEETINGS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_MEETINGS](),
    element: <MeetingsListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.CREATE_EVENT],
  },
  [AppRoutesEnum.UPDATE_MEETINGS]: {
    path: AppRoutes[AppRoutesEnum.UPDATE_MEETINGS](':id'),
    element: <UpdateMeetingPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.UPDATE_MEETINGS],
  },
  [AppRoutesEnum.CREATE_MEETINGS]: {
    path: AppRoutes[AppRoutesEnum.CREATE_MEETINGS](),
    element: <CreateMeetingPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.CREATE_MEETINGS],
  },
  [AppRoutesEnum.ADMIN_LOYALTY]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_LOYALTY](),
    element: <AdminLoyaltyListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_LOYALTY],
  },
  [AppRoutesEnum.ADMIN_LOYALTY_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_LOYALTY_CREATE](),
    element: <CreateLoyaltyPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_LOYALTY_CREATE],
  },
  [AppRoutesEnum.ADMIN_LOYALTY_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_LOYALTY_UPDATE](':id'),
    element: <UpdateLoyalty />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_LOYALTY_UPDATE],
  },
  [AppRoutesEnum.ADMIN_SERVICES]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_SERVICES](),
    element: <AdminServicesListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_SERVICES],
  },
  [AppRoutesEnum.ADMIN_SERVICES_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_SERVICES_UPDATE](':id'),
    element: <UpdateService />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_SERVICES_UPDATE],
  },
  [AppRoutesEnum.ADMIN_SERVICES_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_SERVICES_CREATE](),
    element: <CreateServicePage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_SERVICES_CREATE],
  },
  [AppRoutesEnum.ADMIN_ADVERTISEMENT]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_ADVERTISEMENT](),
    element: <AdminAdvertisementsListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_ADVERTISEMENT],
  },
  [AppRoutesEnum.ADMIN_ADVERTISEMENT_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_ADVERTISEMENT_CREATE](),
    element: <CreateAdvertisementPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_ADVERTISEMENT_CREATE],
  },
  [AppRoutesEnum.ADMIN_ADVERTISEMENT_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_ADVERTISEMENT_UPDATE](':id'),
    element: <UpdateAdvertisement />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_ADVERTISEMENT_UPDATE],
  },
  [AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS](),
    element: <AdminAnnouncementsTablePage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS],
  },
  [AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS_CREATE](),
    element: <CreateAnnouncementPage />,
    authOnly: true,
    acceptedRoles:
      AccessRoles[AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS_CREATE],
  },
  [AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS_UPDATE](':id'),
    element: <UpdateAnnouncementPage />,
    authOnly: true,
    acceptedRoles:
      AccessRoles[AppRoutesEnum.ADMIN_EMPLOYEE_ANNOUNCEMENTS_UPDATE],
  },
  [AppRoutesEnum.ADMIN_NOTIFICATIONS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_NOTIFICATIONS](),
    element: <NotificationsListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_NOTIFICATIONS],
  },
  [AppRoutesEnum.ADMIN_NOTIFICATIONS_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_NOTIFICATIONS_CREATE](),
    element: <CreateNotificationPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_NOTIFICATIONS_CREATE],
  },
  [AppRoutesEnum.ADMIN_NOTIFICATIONS_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_NOTIFICATIONS_CURRENT](':id'),
    element: <CurrentNotificationPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_NOTIFICATIONS_CURRENT],
  },
  [AppRoutesEnum.ADMIN_TECHNICAL_WORKS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_TECHNICAL_WORKS](),
    element: <AdminTechnicalWorksListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_TECHNICAL_WORKS],
  },
  [AppRoutesEnum.ADMIN_TECHNICAL_WORKS_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_TECHNICAL_WORKS_CREATE](),
    element: <CreateTechWorkPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_TECHNICAL_WORKS_CREATE],
  },
  [AppRoutesEnum.ADMIN_TECHNICAL_WORKS_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_TECHNICAL_WORKS_UPDATE](':id'),
    element: <UpdateTechWorkPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_TECHNICAL_WORKS_UPDATE],
  },
  [AppRoutesEnum.ADMIN_VOTING]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_VOTING](),
    element: <AdminVotingListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_VOTING],
  },
  [AppRoutesEnum.ADMIN_VOTING_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_VOTING_CREATE](),
    element: <CreateVotingPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_VOTING_CREATE],
  },
  [AppRoutesEnum.ADMIN_VOTING_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_VOTING_UPDATE](':id'),
    element: <UpdateVotingPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_VOTING_UPDATE],
  },
  [AppRoutesEnum.ADMIN_VOTING_UPDATE_QUESTIONS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_VOTING_UPDATE_QUESTIONS](':id'),
    element: <UpdateVotingQuestionsPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_VOTING_UPDATE_QUESTIONS],
  },
  [AppRoutesEnum.ADMIN_VOTING_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_VOTING_CURRENT](':id'),
    element: <CurrentVotingPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_VOTING_CURRENT],
  },
  [AppRoutesEnum.ADMIN_ROLES]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_ROLES](),
    element: <RolesListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_ROLES],
  },
  [AppRoutesEnum.ADMIN_ROLES_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_ROLES_CREATE](),
    element: <CreateRolePage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_ROLES_CREATE],
  },
  [AppRoutesEnum.ADMIN_ROLES_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_ROLES_UPDATE](':id'),
    element: <UpdateRolePage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_ROLES_UPDATE],
  },
  [AppRoutesEnum.RESIDENTS]: {
    path: AppRoutes[AppRoutesEnum.RESIDENTS](),
    element: <AdminResidentsListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.RESIDENTS],
  },
  [AppRoutesEnum.RESIDENTS_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.RESIDENTS_CURRENT](':id'),
    element: <AdminCurrentResidentPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.RESIDENTS_CURRENT],
  },
  [AppRoutesEnum.EMPLOYEES]: {
    path: AppRoutes[AppRoutesEnum.EMPLOYEES](),
    element: <AdminEmployeesListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.EMPLOYEES],
  },
  [AppRoutesEnum.EMPLOYEES_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.EMPLOYEES_CURRENT](':id'),
    element: <AdminCurrentEmployeePage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.EMPLOYEES_CURRENT],
  },
  [AppRoutesEnum.EMPLOYEES_CREATE]: {
    path: AppRoutes[AppRoutesEnum.EMPLOYEES_CREATE](),
    element: <CreateEmployeePage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.EMPLOYEES_CREATE],
  },
  [AppRoutesEnum.EMPLOYEES_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.EMPLOYEES_UPDATE](':id'),
    element: <UpdateEmployeePage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.EMPLOYEES_UPDATE],
  },
  [AppRoutesEnum.PASSPORT]: {
    path: AppRoutes[AppRoutesEnum.PASSPORT](),
    element: <PassportPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.PASSPORT],
  },
  [AppRoutesEnum.ADMIN_REQUESTS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_REQUESTS](),
    element: <ApplicationsPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_REQUESTS],
  },
  [AppRoutesEnum.ADMIN_APPLICATIONS]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_APPLICATIONS](),
    element: <ApplicationsMainPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_APPLICATIONS],
  },
  [AppRoutesEnum.ADMIN_REQUESTS_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ADMIN_REQUESTS_CURRENT](':id'),
    element: <CurrentRequestPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ADMIN_REQUESTS_CURRENT],
  },
  [AppRoutesEnum.ENGINEERING_ELEVATORS]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_ELEVATORS](),
    element: <LiftListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_ELEVATORS],
  },
  [AppRoutesEnum.ENGINEERING_ELEVATOR_CREATE]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_ELEVATOR_CREATE](),
    element: <CreateElevatorPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_ELEVATOR_CREATE],
  },
  [AppRoutesEnum.ENGINEERING_ELEVATOR_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_ELEVATOR_CURRENT](':id'),
    element: <CurrentLiftPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_ELEVATOR_CURRENT],
  },
  [AppRoutesEnum.ENGINEERING_ELEVATOR_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_ELEVATOR_UPDATE](':id'),
    element: <UpdateElevatorPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_ELEVATOR_UPDATE],
  },
  [AppRoutesEnum.ENGINEERING_HEATING]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_HEATING](),
    element: <HeatingListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_HEATING],
  },
  [AppRoutesEnum.ENGINEERING_HEATING_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_HEATING_CURRENT](':id'),
    element: <CurrentHeatingPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_HEATING_CURRENT],
  },
  [AppRoutesEnum.ENGINEERING_ENERGY]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_ENERGY](),
    element: <EnergyListPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_ENERGY],
  },
  [AppRoutesEnum.ENGINEERING_ENERGY_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ENGINEERING_ENERGY_CURRENT](':id'),
    element: <CurrentEnergyPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ENGINEERING_ENERGY_CURRENT],
  },

  [AppRoutesEnum.SECURITY]: {
    path: AppRoutes[AppRoutesEnum.SECURITY](),
    element: <SecurityPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY],
  },
  [AppRoutesEnum.SECURITY_ACCESS]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_ACCESS](),
    element: <SecurityAccessPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_ACCESS],
  },
  [AppRoutesEnum.SECURITY_ACCESS_CREATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_ACCESS_CREATE](),
    element: <CreateAccessPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_ACCESS_CREATE],
  },
  [AppRoutesEnum.SECURITY_ACCESS_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_ACCESS_CURRENT](':id'),
    element: <CurrentAccessPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_ACCESS_CURRENT],
  },
  [AppRoutesEnum.SECURITY_ACCESS_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_ACCESS_UPDATE](':id'),
    element: <UpdateAccessPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_ACCESS_UPDATE],
  },

  [AppRoutesEnum.SECURITY_INTERCOM]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_INTERCOM](),
    element: <SecurityIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_INTERCOM],
  },
  [AppRoutesEnum.SECURITY_INTERCOM_CREATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_INTERCOM_CREATE](),
    element: <CreateIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_INTERCOM_CREATE],
  },
  [AppRoutesEnum.SECURITY_INTERCOM_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_INTERCOM_CURRENT](':id'),
    element: <CurrentIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_INTERCOM_CURRENT],
  },
  [AppRoutesEnum.SECURITY_INTERCOM_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_INTERCOM_UPDATE](':id'),
    element: <UpdateIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_INTERCOM_UPDATE],
  },

  [AppRoutesEnum.SECURITY_SLS_INTERCOM]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_SLS_INTERCOM](),
    element: <SecuritySlsIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_SLS_INTERCOM],
  },
  [AppRoutesEnum.SECURITY_SLS_INTERCOM_CREATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_SLS_INTERCOM_CREATE](),
    element: <CreateSlsIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_SLS_INTERCOM_CREATE],
  },
  [AppRoutesEnum.SECURITY_SLS_INTERCOM_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_SLS_INTERCOM_CURRENT](':id'),
    element: <CurrentSlsIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_SLS_INTERCOM_CURRENT],
  },
  [AppRoutesEnum.SECURITY_SLS_INTERCOM_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_SLS_INTERCOM_UPDATE](':id'),
    element: <UpdateSlsIntercomPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_SLS_INTERCOM_UPDATE],
  },

  [AppRoutesEnum.SECURITY_VIDEO]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_VIDEO](),
    element: <SecurityVideoPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_VIDEO],
  },
  [AppRoutesEnum.SECURITY_VIDEO_CREATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_VIDEO_CREATE](),
    element: <CreateCameraPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_VIDEO_CREATE],
  },
  [AppRoutesEnum.SECURITY_VIDEO_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_VIDEO_CURRENT](':id'),
    element: <CurrentCameraPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_VIDEO_CURRENT],
  },
  [AppRoutesEnum.SECURITY_VIDEO_UPDATE]: {
    path: AppRoutes[AppRoutesEnum.SECURITY_VIDEO_UPDATE](':id'),
    element: <UpdateCameraPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.SECURITY_VIDEO_UPDATE],
  },

  [AppRoutesEnum.STATISTIC]: {
    path: AppRoutes[AppRoutesEnum.STATISTIC](),
    element: <StatisticPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.STATISTIC],
  },
  [AppRoutesEnum.ACCOUNTING]: {
    path: AppRoutes[AppRoutesEnum.ACCOUNTING](),
    element: <AccountingPage />,
    authOnly: true,
    acceptedRoles: AccessRoles[AppRoutesEnum.ACCOUNTING],
  },
  [AppRoutesEnum.NEWS_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.NEWS_CURRENT](':id'),
    element: <CurrentNewsPage />,
    authOnly: false,
  },
  [AppRoutesEnum.EVENT_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.EVENT_CURRENT](':id'),
    element: <CurrentEventPage />,
    authOnly: false,
  },

  [AppRoutesEnum.AUTH_LOGIN]: {
    path: AppRoutes[AppRoutesEnum.AUTH_LOGIN](),
    element: <LoginPage />,
    authOnly: false,
  },
  [AppRoutesEnum.AUTH_REGISTRATION]: {
    path: AppRoutes[AppRoutesEnum.AUTH_REGISTRATION](),
    element: <RegistrationPage />,
    authOnly: false,
  },
  [AppRoutesEnum.AUTH_RESTORE_PASSWORD_EMAIL]: {
    path: AppRoutes[AppRoutesEnum.AUTH_RESTORE_PASSWORD_EMAIL](),
    element: <SendCodeForMailPage />,
    authOnly: false,
  },
  [AppRoutesEnum.AUTH_RESTORE_PASSWORD_PHONE]: {
    path: AppRoutes[AppRoutesEnum.AUTH_RESTORE_PASSWORD_PHONE](),
    element: <SendCodeForPhonePage />,
    authOnly: false,
  },
  [AppRoutesEnum.RESET_PASSWORD]: {
    path: AppRoutes[AppRoutesEnum.RESET_PASSWORD](),
    element: <ResetPasswordPage />,
    authOnly: true,
  },
  [AppRoutesEnum.AUTH_REGISTRATION_CONFIRM]: {
    path: AppRoutes[AppRoutesEnum.AUTH_REGISTRATION_CONFIRM](':id'),
    element: <RegistrationConfirmPage />,
    authOnly: false,
  },
  [AppRoutesEnum.MAIN]: {
    path: AppRoutes[AppRoutesEnum.MAIN](),
    element: <MainPage />,
    authOnly: false,
  },

  [AppRoutesEnum.NEWS]: {
    path: AppRoutes[AppRoutesEnum.NEWS](),
    element: <NewsListPage />,
    authOnly: false,
  },
  [AppRoutesEnum.POSTER]: {
    path: AppRoutes[AppRoutesEnum.POSTER](),
    element: <EventsListPage />,
    authOnly: false,
  },
  [AppRoutesEnum.ACTIVITY_VOTING]: {
    path: AppRoutes[AppRoutesEnum.ACTIVITY_VOTING](),
    element: <UserVotingPage />,
    authOnly: false,
  },
  [AppRoutesEnum.ACTIVITY_VOTING_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ACTIVITY_VOTING_CURRENT](':id'),
    element: <UserCurrentVotingPage />,
    authOnly: false,
  },
  [AppRoutesEnum.ACTIVITY_MEETINGS]: {
    path: AppRoutes[AppRoutesEnum.ACTIVITY_MEETINGS](),
    element: <UserMeetingsPage />,
    authOnly: false,
  },
  [AppRoutesEnum.ACTIVITY_MEETINGS_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.ACTIVITY_MEETINGS_CURRENT](':id'),
    element: <CurrentMeetingPage />,
    authOnly: false,
  },
  [AppRoutesEnum.SERVICES]: {
    path: AppRoutes[AppRoutesEnum.SERVICES](),
    element: <UserServicesListPage />,
    authOnly: false,
  },
  [AppRoutesEnum.LOYALTY]: {
    path: AppRoutes[AppRoutesEnum.LOYALTY](),
    element: <UserLoyaltyListPage />,
    authOnly: false,
  },
  [AppRoutesEnum.SERVICES_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.SERVICES_CURRENT](':id'),
    element: <UserCurrentServicePage />,
    authOnly: false,
  },
  [AppRoutesEnum.LOYALTY_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.LOYALTY_CURRENT](':id'),
    element: <UserCurrentLoyaltyPage />,
    authOnly: false,
  },
  [AppRoutesEnum.REQUESTS]: {
    path: AppRoutes[AppRoutesEnum.REQUESTS](),
    element: <RequestMainPage />,
    authOnly: true,
    // acceptedRoles: [],
  },
  [AppRoutesEnum.REQUESTS_CREATE]: {
    path: AppRoutes[AppRoutesEnum.REQUESTS_CREATE](),
    element: <CreateRequestPage />,
    authOnly: true,
    // acceptedRoles: [],
  },
  [AppRoutesEnum.REQUESTS_CURRENT]: {
    path: AppRoutes[AppRoutesEnum.REQUESTS_CURRENT](':id'),
    element: <CurrentRequestPage />,
    authOnly: true,
    // acceptedRoles: [],
  },
  [AppRoutesEnum.APPLICATIONS]: {
    path: AppRoutes[AppRoutesEnum.APPLICATIONS](),
    element: <ApplicationsMainPage />,
    authOnly: true,
    // acceptedRoles: [],
  },
  [AppRoutesEnum.APPLICATIONS_CREATE]: {
    path: AppRoutes[AppRoutesEnum.APPLICATIONS_CREATE](),
    element: <CreateApplicationPage />,
    authOnly: true,
    // acceptedRoles: [],
  },
  [AppRoutesEnum.TECHNICAL_WORKS]: {
    path: AppRoutes[AppRoutesEnum.TECHNICAL_WORKS](),
    element: <TechnicalWorks />,
    authOnly: false,
  },
  [AppRoutesEnum.KNOWLEDGE]: {
    path: AppRoutes[AppRoutesEnum.KNOWLEDGE](),
    element: <KBasePage />,
    authOnly: false,
  },
  [AppRoutesEnum.SETTINGS]: {
    path: AppRoutes[AppRoutesEnum.SETTINGS](),
    element: <SettingsPage />,
    authOnly: true,
  },

  [AppRoutesEnum.FORBIDDEN]: {
    path: AppRoutes[AppRoutesEnum.FORBIDDEN](),
    element: <ForbiddenPage />,
  },

  [AppRoutesEnum.NOT_FOUND]: {
    path: AppRoutes[AppRoutesEnum.NOT_FOUND](),
    element: <NotFoundPage />,
  },
};
